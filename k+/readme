# k+ extends k.c with some c-libraries using the native function type.
# blas lapack fftw lp_solve ode specfun curl sqlite..
#
# m.awk also replaces the builtin math functions with libm.
#
# example gemm             C := a*op(A)*op(B) + beta*C
# gemm[a;A;rA;B;rB;op;b;C] C is reused only if refcount 1, op is 012 notrans/trans/conjtrans
# matrices(A, B) are passed as vectors, e.g. ,/3^?12
# rA is the number of rows, if negative A is stored in column major format.
# e.g. A:3^?12 is a list of length 3 containing length-4 vectors.
# if these represent A matrix with 3 columns, rA is -4.
# if they are a 3 rows of a matrix, rA is 3 

# BLAS    /usr/include/x86_64-linux-gnu/cblas-netlib.h
# nrm2[x] FZ  l2 vector norm         FZ mean double-float or complex vector
# asum[x] FZ  l1 vector norm
# imax[x] FZ  index of l1 max element
# rot[c;s;x;y] c:f s:f x:FZ y:FZ  plane rotation
# mv[a;A;rA;op;b;x;y] c:fz A:FZ b:fz y:FZ  a*A*x+b*y
#
# CURL
# curl"https://ktye.github.io/k.png"

set -e
set -x
if [ "$1" = "get" ];then
 wget -Okc.orig https://github.com/ktye/i/releases/download/latest/k.c 
fi

awk -f m.awk kc.orig |\
sed -e 's/math.h>$/math.h>\n#include"l.h"/' \
    -e 's/kinit()/kinit();libs()/' \
        >k.c
cat m.c>>k.c
cat l.c>>k.c

 C=cc
 O="-O0 -march=native"
 D="-D    BLAS -DCURL"
 L="-lopenblas -lcurl"
$C $O $D -ok+ k.c $L -lm
