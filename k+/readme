# k+ extends k.c with some c-libraries using the native function type.
# blas lapack fftw lp_solve ode specfun rmath curl sqlite..
#
# m.awk also replaces the builtin math functions with libm.
#
# example gemm             C := a*op(A)*op(B) + beta*C
# gemm[a;A;rA;B;rB;op;b;C] C is reused only if refcount 1, op is 012 notrans/trans/conjtrans
# matrices(A, B) are passed as vectors, e.g. ,/3^?12
# rA is the number of rows, if negative A is stored in column major format.
# e.g. A:3^?12 is a list of length 3 containing length-4 vectors.
# if these represent a matrix with 3 columns, rA is -4.
# if they are a 3 rows of a matrix, rA is 3 

# BLAS    /usr/include/x86_64-linux-gnu/cblas-netlib.h
# nrm2[x] FZ  l2 vector norm         FZ mean double-float or complex vector
# asum[x] FZ  l1 vector norm         some blas args are changed to facilitate projections
# imax[x] FZ  index of l1 max element                               (changing input last)
# rot[c;s;x;y] c:f s:f x:FZ y:FZ  plane rotation
# dot dotc todo
# gemv[a;A;rA;op;b;y;x] c:fz A:FZ b:fz y:FZ  a*A*x+b*y
#
# CURL
# curl"https://ktye.github.io/k.png"
#
# RMATH (r-mathlib)

# dependencies linux/windows, see deps
# - linux(debian)    see deps
# - windows(mingw64) see deps.$pacman -S mingw-w64-x86_64-lpsolve

set -e
set -x
if [ "$1" = "get" ];then wget -Okc.orig https://github.com/ktye/i/releases/download/latest/k.c; fi

L=""                        #windows: mingw64:  ls /mingw64/lib/*
awk -f m.awk kc.orig |\
sed -e 's/math.h>$/math.h>\n#include"l.h"/' \
    -e 's/kinit()/&;for(void(**f)()=\&__start_reg;f<\&__stop_reg;(*f++)());dx(Asn(help,hlp))/' \
              >k.c
cat       m.c>>k.c
cat       l.c>>k.c
#              k.c


#these lines can be uncommented individually to exclude a package:
#cat    blas.c>>k.c;L="$L -lopenblas"
#cat    curl.c>>k.c;L="$L -lcurl"
cat  sparse.c>>k.c;L="$L -lumfpack -lspqr -lcholmod"
#cat   rmath.c>>k.c;L="$L Rmath.dll"   #-lRmath
#              k.c

#type help to see a the list of all registered functions and their arity

 O="-O3 -march=native"
 C=cc
 K="-ok+ k.c"
$C $O $K $L -lm
